# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  build_linux:
#    runs-on: ubuntu-18.04
#    steps:
#    - uses: actions/checkout@v2

    # install Qt with cache
#    - name: Cache Qt
#      id: cache-qt
#      uses: actions/cache@v1
#      with:
#        path: ../Qt
#        key: QtCache

#    - name: Install Qt
#      uses: jurplel/install-qt-action@v2
#      with:
#        cached: ${{ steps.cache-qt.outputs.cache-hit }}

#    - name: Install deps
#      run: sudo apt-get install libasound2-dev mesa-common-dev

#    - name: Install Tundra
#      run: git clone --recursive https://github.com/deplinenoise/tundra.git && cd tundra && make && sudo make install && cd ..

#    - name: Build Debug
#      run: |
#        export QT5_BIN=$Qt5_DIR/bin
#        export QT5_INC=$Qt5_DIR/include
#        export QT5_LIB=$Qt5_DIR/lib
#        tundra2 linux-gcc-debug

  # Build macOS
#  build_macOS:
#    runs-on: macOS-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Install Qt
#      uses: jurplel/install-qt-action@v2
#    - name: Build Release
#      run: |
#        export QT5_BIN=$Qt5_DIR/bin
#        export QT5_INC=$Qt5_DIR/include
#        export QT5_LIB=$Qt5_DIR/lib
#        scripts/mac_build_release.sh

# Build Windows
  build_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
#    - name: Install Qt
#      uses: jurplel/install-qt-action@v2
#    - name: Env test
#      run: |
#        echo "Testing"
#        echo %Qt5_DIR%
#        echo "Testing 2"
#        set QT5_BIN=%Qt5_DIR%/bin
#        echo %QT5_BIN%
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    - name: Build tundra
      run: |
        msbuild src/external/tundra/vs2017/Tundra.sln' "/property:Configuration=Release"
        src/external/tundra/vs2017/x64/Release/tundra2.exe
#bin\windows\tundra2.exe win64-msvc-debug



