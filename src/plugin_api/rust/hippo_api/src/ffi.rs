/* semi-automatically generated by rust-bindgen */

use std::os::raw::{c_void, c_uchar};
use wrui::ffi_gen::PUPluginUI;

pub const HippoProbeResult_HippoProbeResult_Supported: HippoProbeResult = 0;
pub const HippoProbeResult_HippoProbeResult_Unsupported: HippoProbeResult = 1;
pub const HippoProbeResult_HippoProbeResult_Unsure: HippoProbeResult = 2;
///
pub type HippoProbeResult = u32;
pub const HippoFileSeek_HippoFileSeek_Start: HippoFileSeek = 0;
pub const HippoFileSeek_HippoFileSeek_Current: HippoFileSeek = 1;
pub const HippoFileSeek_HippoFileSeek_End: HippoFileSeek = 2;
pub type HippoFileSeek = u32;
pub type HippoIoHandle = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoIoResult {
    pub error_message: *const ::std::os::raw::c_char,
    pub status: ::std::os::raw::c_int,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoApiPrivData {
    _unused: [u8; 0],
}
pub type HippoIoErrorCode = i64;
///
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoIoAPI {
    pub exists: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoApiPrivData,
            filename: *const ::std::os::raw::c_char,
        ) -> ::std::os::raw::c_int,
    >,
    pub read_file_to_memory: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoApiPrivData,
            filename: *const ::std::os::raw::c_char,
            dest: *mut *mut ::std::os::raw::c_void,
            size: *mut u64,
        ) -> HippoIoErrorCode,
    >,
    pub free_file_to_memory: ::std::option::Option<
        unsafe extern "C" fn(priv_data: *mut HippoApiPrivData, dest: *mut ::std::os::raw::c_void)
            -> HippoIoErrorCode,
    >,
    pub open: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoApiPrivData,
            target: *const ::std::os::raw::c_char,
            handle: *mut HippoIoHandle,
        ) -> HippoIoErrorCode,
    >,
    pub close:
        ::std::option::Option<unsafe extern "C" fn(handle: HippoIoHandle) -> HippoIoErrorCode>,
    pub size: ::std::option::Option<
        unsafe extern "C" fn(handle: HippoIoHandle, res: *mut u64) -> HippoIoErrorCode,
    >,
    pub read: ::std::option::Option<
        unsafe extern "C" fn(handle: HippoIoHandle, dest: *mut ::std::os::raw::c_void, size: i64)
            -> HippoIoErrorCode,
    >,
    pub seek: ::std::option::Option<
        unsafe extern "C" fn(handle: HippoIoHandle, type_: HippoFileSeek, step: i64)
            -> HippoIoErrorCode,
    >,
    pub priv_data: *mut HippoApiPrivData,
}
pub type HippoFileAPI = HippoIoAPI;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoMetadataAPIPrivData {
    _unused: [u8; 0],
}
pub const HippoMetaEncoding_HippoMetaEncoding_UTF8: HippoMetaEncoding = 0;
pub const HippoMetaEncoding_HippoMetaEncoding_ShiftJS2: HippoMetaEncoding = 1;
pub type HippoMetaEncoding = u32;
pub const HippoMetadataResult_HippoMetadataResult_KeyNotFound: HippoMetadataResult = 0;
pub const HippoMetadataResult_HippoMetadataResult_UnableToMakeQuery: HippoMetadataResult = -1;
pub type HippoMetadataResult = i32;
///
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoMetadataAPI {
    pub get_key: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoMetadataAPIPrivData,
            buffer: *const ::std::os::raw::c_char,
            type_: *const ::std::os::raw::c_char,
            error_code: *mut ::std::os::raw::c_int,
        ) -> *const ::std::os::raw::c_char,
    >,
    pub set_key: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoMetadataAPIPrivData,
            buffer: *const ::std::os::raw::c_char,
            sub_song: u32,
            value: *const ::std::os::raw::c_char,
            type_: *const ::std::os::raw::c_char,
        ) -> ::std::os::raw::c_int,
    >,
    pub set_key_with_encoding: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoMetadataAPIPrivData,
            buffer: *const ::std::os::raw::c_char,
            sub_song: u32,
            value: *const ::std::os::raw::c_char,
            type_: *const ::std::os::raw::c_char,
            encoding: HippoMetaEncoding,
        ) -> ::std::os::raw::c_int,
    >,
    pub priv_data: *mut HippoMetadataAPIPrivData,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoServicePrivData {
    _unused: [u8; 0],
}
///
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoServiceAPI {
    pub get_io_api: ::std::option::Option<
        unsafe extern "C" fn(
            private_data: *mut HippoServicePrivData,
            api_version: ::std::os::raw::c_int,
        ) -> *mut HippoFileAPI,
    >,
    pub get_metadata_api: ::std::option::Option<
        unsafe extern "C" fn(
            private_data: *mut HippoServicePrivData,
            api_version: ::std::os::raw::c_int,
        ) -> *mut HippoMetadataAPI,
    >,
    pub private_data: *mut HippoServicePrivData,
}
pub const HippoEventType_HippoEventType_SongChanged: HippoEventType = 0;
pub const HippoEventType_HippoEventType_PlaylistChanges: HippoEventType = 1;
///
pub type HippoEventType = u32;
pub type HippoMessageHandle = u64;
///
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoMessageAPI {
    pub subscribe: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoMessageAPI,
            instance_data: *mut ::std::os::raw::c_void,
            type_: HippoEventType,
        ),
    >,
    pub unsubscribe: ::std::option::Option<
        unsafe extern "C" fn(
            priv_data: *mut HippoMessageAPI,
            instance_data: *mut ::std::os::raw::c_void,
            type_: HippoEventType,
        ),
    >,
    pub begin_message: ::std::option::Option<unsafe extern "C" fn() -> HippoMessageHandle>,
    pub priv_data: *const c_void,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoSaveAPI {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoLoadAPI {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoPlaybackPlugin {
    pub api_version: u64,
    pub name: *const ::std::os::raw::c_char,
    pub version: *const ::std::os::raw::c_char,
    pub probe_can_play: ::std::option::Option<
        unsafe extern "C" fn(
            data: *const u8,
            data_size: u32,
            filename: *const ::std::os::raw::c_char,
            total_size: u64,
        ) -> HippoProbeResult,
    >,
    pub supported_extensions:
        ::std::option::Option<unsafe extern "C" fn() -> *const ::std::os::raw::c_char>,
    pub create: ::std::option::Option<
        unsafe extern "C" fn(services: *mut HippoServiceAPI) -> *mut ::std::os::raw::c_void,
    >,
    pub destroy: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int,
    >,
    pub open: ::std::option::Option<
        unsafe extern "C" fn(
            user_data: *mut ::std::os::raw::c_void,
            buffer: *const ::std::os::raw::c_char,
        ) -> ::std::os::raw::c_int,
    >,
    pub close: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int,
    >,
    pub read_data: ::std::option::Option<
        unsafe extern "C" fn(
            user_data: *mut ::std::os::raw::c_void,
            dest: *mut ::std::os::raw::c_void,
            max_sample_count: u32,
        ) -> ::std::os::raw::c_int,
    >,
    pub seek: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void, ms: ::std::os::raw::c_int)
            -> ::std::os::raw::c_int,
    >,
    pub configure: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void, ui_funcs: *mut PUPluginUI)
            -> ::std::os::raw::c_int,
    >,
    pub save: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void, save_api: *mut HippoSaveAPI)
            -> ::std::os::raw::c_int,
    >,
    pub load: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void, load_api: *mut HippoLoadAPI)
            -> ::std::os::raw::c_int,
    >,
    pub priv_: *mut ::std::os::raw::c_void,
}

unsafe impl Sync for HippoViewPlugin {}

///
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HippoViewPlugin {
    pub api_version: u64,
    pub name: *const u8,
    pub version: *const u8,
    pub create: ::std::option::Option<fn(services: *const HippoServiceAPI) -> *mut ::std::os::raw::c_void >,
    pub setup_ui: ::std::option::Option<fn(user_data: *mut c_void, ui_funcs: *const PUPluginUI)>,
    pub destroy: ::std::option::Option<
        fn(user_data: *mut ::std::os::raw::c_void),
    >,
    pub event: ::std::option::Option<unsafe extern "C" fn(event: ::std::os::raw::c_int)>,
    pub save: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void, save_api: *mut HippoSaveAPI)
            -> ::std::os::raw::c_int,
    >,
    pub load: ::std::option::Option<
        unsafe extern "C" fn(user_data: *mut ::std::os::raw::c_void, load_api: *mut HippoLoadAPI)
            -> ::std::os::raw::c_int,
    >,
}
